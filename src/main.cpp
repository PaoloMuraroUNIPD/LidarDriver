// main per testare la classe

#include <iostream>

#include "../include/LidarDriver.h"

int main(void) {
    std::vector<double> scansione = {
            0.72, 0.34, 1.57, 0.11, 1.98, 1.22, 0.89, 1.01, 1.43, 1.03,
            1.88, 0.51, 1.71, 0.45, 0.99, 1.35, 0.84, 1.44, 0.26, 1.62,
            1.17, 0.05, 1.90, 0.61, 0.20, 1.65, 0.37, 1.09, 1.55, 0.23,
            1.47, 0.10, 1.78, 0.90, 1.53, 0.30, 1.76, 1.06, 0.59, 1.27,
            0.14, 1.81, 1.49, 0.72, 1.66, 0.33, 1.38, 1.00, 0.43, 0.28,
            1.46, 0.16, 1.63, 0.31, 1.25, 1.07, 0.95, 1.37, 0.18, 1.68,
            0.46, 1.21, 1.52, 0.19, 1.83, 0.66, 1.29, 0.92, 0.35, 1.12,
            1.75, 0.54, 1.33, 0.01, 1.85, 0.58, 0.48, 1.20, 1.11, 0.07,
            1.87, 0.64, 0.15, 1.45, 0.77, 1.24, 0.02, 0.88, 1.82, 0.70,
            1.40, 0.08, 1.77, 0.93, 1.05, 0.12, 1.13, 0.42, 1.34, 0.03,
            1.19, 0.62, 0.17, 1.56, 1.08, 0.50, 1.64, 0.40, 0.96, 1.14,
            0.27, 1.86, 0.55, 1.41, 0.71, 0.21, 1.50, 0.04, 0.68, 1.84,
            0.47, 1.31, 1.10, 0.25, 1.69, 0.91, 1.28, 0.49, 1.73, 0.35,
            0.98, 1.60, 0.41, 1.23, 0.09, 1.67, 0.52, 1.42, 0.32, 1.58,
            0.67, 1.30, 0.06, 1.79, 0.24, 1.48, 0.65, 1.36, 0.13, 1.80,
            1.04, 0.56, 1.59, 0.22, 1.72, 0.74, 1.26, 0.29, 1.51, 0.81,
            0.36, 1.18, 0.60, 1.39, 0.57, 1.15, 0.38, 1.70, 1.02, 0.73,
            1.89, 0.53, 1.32, 0.44, 2.00, 0.78, 1.16, 0.69, 1.74, 1.61,
            0.09, 1.54, 0.79, 1.91, 0.39, 1.92, 0.80, 1.93, 0.63, 1.94
    };
//    Serve un costruttore generico?
    LidarDriver lidarDriver(1);


//    ANCORA DA IMPLEMENTARE
//    lidarDriver.new_scan(scansione);
//    lidarDriver.get_distance(60);
//    lidarDriver.get_scan();
//    lidarDriver.clear_buffer();

    std::cout<<lidarDriver<<std::endl;
    std::cout << "OK, LET'S GO" << std::endl;
    return 0;
}